{{ 'component-of-collection-tabs.css' | asset_url | stylesheet_tag }}
<script src="{{ 'component-of-collection-tabs.js' | asset_url }}" defer="defer"></script>



{% liquid
    assign currentSelectionButtonText = 'Choose collection'
    for block in section.blocks
      case block.type
        when 'collection'
        if block.settings.collection.handle contains collection.handle
        assign currentSelectionButtonText = block.settings.button_text 
        endif
      endcase
    endfor
%}

<div class="of-collection-tabs {{ currentSelectionButtonText }}">
  <div class="button-container">
    <button id="of-tab-button" class="of-button">{{ currentSelectionButtonText }}</button>
  </div>

  <div class="loader"></div>
  <div class="inner-container of-dropdown" data-of-dropdown>
    <div id="dropdown-selector" class="dropdown-selector" data-of-dropdown-button>Select collection</div>
    <div class="of-dropdown-menu">
      {% for block in section.blocks %}
        {% case block.type %}
          {% when "collection" %}
            {% assign customID =  block.settings.collection.handle |  append: "-of-" | append: forloop.index0 %}
            {% comment %} <div class="tab" onclick="renderCollection('{{ block.settings.collection.handle }}', '{{ block.settings.button_text | default: block.settings.collection.title }}')">{{ block.settings.tab_heading | default: block.settings.collection.title }}</div> {% endcomment %}
            <div class="tab {% if collection.handle == block.settings.collection.handle %}active{% endif %}" data-id="{{ customID }}" data-collection-handle="{{ block.settings.collection.handle }}" data-button-text="{{ block.settings.button_text | default: block.settings.collection.title }}">{{ block.settings.tab_heading | default: block.settings.collection.title }}</div>
        {% endcase %} 
      {% endfor %}
    </div>
     
  </div> 
</div>




{% schema %}
{
  "name": "Of Collection Tabs",
  "tag": "section",
  "class": "section", 
  "disabled_on": {
    "groups": ["header", "footer"]
  },
  "settings": [
    {
      "type": "header",
      "content": "t:sections.all.padding.section_padding_heading"
    },
    {
      "type": "range",
      "id": "padding_top",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_top",
      "default": 36
    },
    {
      "type": "range",
      "id": "padding_bottom",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_bottom",
      "default": 36
    }
  ],
  "blocks": [
    {
      "type": "collection",
      "name": "Collection",
      "settings":[
        {
          "type": "collection",
          "label": "Collection",
          "id": "collection",
          "info": "Collection you want to link"
        },
        {
          "type": "text",
          "label": "Tab heading",
          "id": "tab_heading",
          "info": "Enter tab heading (collection name by default) "
        },
        {
          "type": "text",
          "label": "Button text",
          "id": "button_text",
          "info": "Enter button text (collection name by default) "
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "Of Collection Tabs"
    }
  ]
}
{% endschema %}